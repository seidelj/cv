function cvTask(subj, debug)
if (~exist('subj', 'var'))
    Screen('CloseAll')
    clc
    fprintf('ERROR ***** call with missing subject parameter')
    return
end



%% General conifurations

% Directories
HELPER_DIR = fullfile(pwd, 'helpers');
IMG_DIR = fullfile(pwd, 'img');
DATA_DIR = fullfile(pwd, 'data');

addpath(HELPER_DIR, IMG_DIR);

% Treatment and charities
CONDITIONS = {'free', 'forced', 'giving'};
EXCEL = {'charities.xlsx', 'Sheet1'};

data.subject = subj;
data.type = 'cvTask';
data.time = fix(clock);
data.filename = ['subj_' num2str(subj) '_cvTask.mat'];

% response keys
KbName('UnifyKeyNames');
data.keys.yesKey = KbName('1!');
data.keys.noKey = KbName('2@');
resp_keys = {'1!' '2@'};
data.keys.resp_key_codes = KbName(resp_keys);
data.keys.backCode = KbName('backspace');
data.keys.continueCode = KbName('space');


%% Build trials structure

% the below runs through a list of charities and
% replicates the list so that each charity is assigned all
% three conditions with all 5 price points [5, 10, 15, 20, 25]
% the final step is to sort on a randomly generated 
[~, ~, raw] = xlsread(EXCEL{1},EXCEL{2});


counter = 1;
for i=1:length(raw)
    for j = 1:5
        for k = 1:3
            data.trials(counter).name = raw{i};
            data.trials(counter).amount = j*5;
            data.trials(counter).condition = CONDITIONS{k};
            data.trials(counter).random = rand;
            data.trials(counter).isi_time = ceil(random('unif',1,6));
            counter = counter + 1;
        end
    end 
end

% sort the trials to get a random order
[~, index] = sortrows([data.trials.random].');
data.trials = data.trials(index);
clear index;

%% Set up the screen/display
PsychDefaultSetup(2);
Screen('Preference', 'VisualDebugLevel', 1);
HideCursor;
screenNumber = max(Screen('Screens'));
window.black = BlackIndex(screenNumber);
[exp_screen, window.screenRect] = PsychImaging('OpenWindow', screenNumber, window.black);
[window.xPixels, window.yPixels] = Screen('WindowSize', exp_screen);
Screen('TextFont', exp_screen, 'Monaco');
Screen('TextSize', exp_screen, 20);
window.wrapAt = 75;
window.vSpacing = 1.3;

window.txt_color = [255 255 255];
window.white = WhiteIndex(exp_screen);
[window.xCenter, window.yCenter] = RectCenter(window.screenRect);

% Set up alpha blenidng for smooth (anti-aliased) lines
Screen('BlendFunction', exp_screen, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');

%% start trials
data.stimuliOnset = GetSecs;
breakTimer = GetSecs;
tic;

if ~exist('debug', 'var')
    len = size(data.trials);
    numberOfTrials = len(2);
else
    numberOfTrials = debug;
end

for trial = 1:numberOfTrials
%     if GetSecs - breakTimer > 600
%         BreakScreen(exp_screen, window);
%         breakTimer = GetSecs;
%     end
    presTime = 3;
    isiTime = data.trials(trial).isi_time;
    [resp, onset, secs] = RunTrials(exp_screen, data, trial, presTime, isiTime, window);
    data.trials(trial).response = resp;
    data.trials(trial).stimuliOnset = onset;
    data.trials(trial).trial_time = GetSecs - onset;
    data.trials(trial).trial_response = secs;
    Screen(exp_screen, 'Flip');
    Screen('Close');
end

toc;
save(fullfile(DATA_DIR, data.filename));
Screen('CloseAll');
rmpath(HELPER_DIR);
rmpath(IMG_DIR);

